import heapq

class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def mergeKLists(lists):
    # Custom comparison function for min-heap
    def compare(node):
        return node.val

    min_heap = []
    for head in lists:
        if head:
            heapq.heappush(min_heap, (head.val, head))

    dummy = ListNode()
    current = dummy

    while min_heap:
        _, node = heapq.heappop(min_heap)
        current.next = node
        current = current.next

        if node.next:
            heapq.heappush(min_heap, (node.next.val, node.next))

    return dummy.next
